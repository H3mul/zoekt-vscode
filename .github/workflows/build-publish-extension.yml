name: Build and package extension

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths-ignore:
      - README.md
      - LICENCE
      - eslint.config.mjs
      - .github/renovate.json5
      - .github/workflows/renovate.yml
      - .vscode/**

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

    - name: Set up Node.js
      uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6

    - name: Install dependencies
      run: npm install

    - name: Run Linter
      run: npm run lint

    - name: Compile extension
      run: npm run compile

    - name: Install vsce
      run: npm install -g vsce

    - name: Set outputs
      id: vars
      run: |
        export sha_short=$(git rev-parse --short HEAD)
        echo "sha_short=$sha_short" >> $GITHUB_OUTPUT
        echo "vsix_file=zoekt-vscode-${sha_short}" >> $GITHUB_OUTPUT
        if [[ "${{ github.ref_name }}" =~ ^v[0-9] ]]; then
          echo "version=$(echo "${{ github.ref_name }}" | sed 's/^v//')" >> $GITHUB_OUTPUT
        else
          echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi

    - name: Package VSCode Extension
      run: |
        vsce package --out ${{ steps.vars.outputs.vsix_file }}.vsix
        vsce package --pre-release --out ${{ steps.vars.outputs.vsix_file }}-pre-release.vsix

    - name: Delete old release assets
      if: github.ref_type == 'branch'
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: CI
        assets: '*.vsix'

    - name: Create Pre-release
      uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
      if: github.ref_type == 'branch'
      with:
        files: ${{ steps.vars.outputs.vsix_file }}-pre-release.vsix
        prerelease: true
        tag_name: CI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
      if: github.ref_type == 'tag'
      with:
        files: ${{ steps.vars.outputs.vsix_file }}.vsix
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Validate package.json version
      if: github.ref_type == 'tag'
      run: |
        VERSION=$(node -p "require('./package.json').version")
        if [ "$VERSION" != "${{ steps.vars.outputs.version }}" ]; then
          echo "package.json version ($VERSION) does not match tag version (${{ steps.vars.outputs.version }})"
          exit 1
        fi

    - name: Publish VSCode Extension
      if: github.ref_type == 'tag'
      run: vsce publish --pat ${{ secrets.VSCE_PAT }} --packagePath ${{ steps.vars.outputs.vsix_file }}.vsix

    - name: Publish Pre-release VSCode Extension
      if: github.ref_type == 'branch'
      run: vsce publish --pat ${{ secrets.VSCE_PAT }} --packagePath ${{ steps.vars.outputs.vsix_file }}-pre-release.vsix --pre-release
      continue-on-error: true
